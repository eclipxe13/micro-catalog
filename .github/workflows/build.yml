name: build
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  schedule:
    - cron: '0 16 * * 0' # sunday 16:00

jobs:

  phpcs:
    name: PHP Code Sniffer
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2 # https://github.com/marketplace/actions/setup-php-action
        with:
          php-version: '8.0'
          coverage: none
          tools: composer:v2, cs2pr, phpcs
        env:
          fail-fast: true

      - name: Code style (phpcs)
        run: phpcs -q --report=checkstyle | cs2pr

  php-cs-fixer:
    name: PHP Coding Standards Fixer
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2 # https://github.com/marketplace/actions/setup-php-action
        with:
          php-version: '8.0' # cannot use php 8.0 because phpunit dependency
          coverage: none
          tools: composer:v2, cs2pr, php-cs-fixer
        env:
          fail-fast: true

      - name: Code style (php-cs-fixer)
        run: php-cs-fixer fix --dry-run --format=checkstyle | cs2pr

  phpunit:
    name: PHPUnit on PHP ${{ matrix.php-versions }}
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        php-versions: ['7.2', '7.3', '7.4', '8.0']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2 # https://github.com/marketplace/actions/setup-php-action
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: none
          tools: composer:v2
        env:
          fail-fast: true

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install project dependencies
        run: composer upgrade --no-interaction --no-progress --prefer-dist

      - name: Tests
        run: vendor/bin/phpunit --testdox --verbose

  phpstan:
    name: PHP Static Analysis Tool
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2 # https://github.com/marketplace/actions/setup-php-action
        with:
          php-version: '8.0'
          coverage: none
          tools: composer:v2, phpstan
        env:
          fail-fast: true

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install project dependencies
        run: composer upgrade --no-interaction --no-progress --prefer-dist

      - name: Code analysis (phpstan)
        run: phpstan analyse --no-progress --verbose

  psalm:
    name: Psalm
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2 # https://github.com/marketplace/actions/setup-php-action
        with:
          php-version: '8.0'
          coverage: none
          tools: composer:v2, psalm
        env:
          fail-fast: true

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install project dependencies
        run: composer upgrade --no-interaction --no-progress --prefer-dist

      - name: Code analysis (psalm)
        run: psalm --no-progress

  infection:
    name: PHP Mutation Testing Framework
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2 # https://github.com/marketplace/actions/setup-php-action
        with:
          php-version: '7.4' # cannot use php 8.0 because phpunit compatibility
          coverage: xdebug
          tools: composer:v2
        env:
          fail-fast: true

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install project dependencies
        run: composer upgrade --no-interaction --no-progress --prefer-dist

      - name: Mutation testing (infection)
        # run this way because infection phar is not working on php 7.4
        run: |
          composer require --dev infection/infection --no-interaction --no-progress --prefer-dist
          vendor/bin/infection --no-progress --no-interaction --show-mutations --logger-github
